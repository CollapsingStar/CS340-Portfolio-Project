{# Allows create/read on the guests_has_attractions intersection table #}
{#
CS340 Portfolio Project
Citation for the following function: Holistic citation for CRUD operations in Flask (followed guide)
Date: 6/1/2022
Copied from /OR/ Adapted from /OR/ Based on: Copied from The OSU CS340 Flask Guide
Source URL: https://github.com/osu-cs340-ecampus/flask-starter-app
#}

<html>
<head>
<title>Attractions/Guests Intersection</title>
<link href="style.css" rel="stylesheet" type="text/css" />
<script language="JavaScript">
		function showform(dowhat) {
			/*
			* four DIVS: browse, insert, update, delete
			* this function sets one visible the others not
			*/
			if (dowhat == 'insert'){
				document.getElementById('browse').style.display = 'none';
				document.getElementById('insert').style.display = 'block';
				document.getElementById('update').style.display = 'none';
				document.getElementById('delete').style.display = 'none';
			}
			else if (dowhat == 'update'){
				document.getElementById('browse').style.display = 'none';
				document.getElementById('insert').style.display = 'none';
				document.getElementById('update').style.display = 'block';
				document.getElementById('delete').style.display = 'none';
			}
			else if (dowhat == 'delete'){
				document.getElementById('browse').style.display = 'none';
				document.getElementById('insert').style.display = 'none';
				document.getElementById('update').style.display = 'none';
				document.getElementById('delete').style.display = 'block';
			}
      else if (dowhat == 'all'){
				document.getElementById('browse').style.display = 'block';
				document.getElementById('insert').style.display = 'block';
				document.getElementById('update').style.display = 'block';
				document.getElementById('delete').style.display = 'block';
			}
			else { //by default display browse
				document.getElementById('browse').style.display = 'block';
				document.getElementById('insert').style.display = 'none';
				document.getElementById('update').style.display = 'none';
				document.getElementById('delete').style.display = 'none';
			}
		}
    function newAttrGuest() { showform('insert'); }
    function updateAttrGuest(pid) { showform('update'); }
    function deleteAttrGuest(pid) { showform ('delete'); }
    function browseAttrGuest() { showform ('browse'); }
    function showAll() { showform ('all'); }
</script>
</head>

<body onload="browseAttrGuest()">
    <h1>  Attractions Ridden by Guests </h1>
    <h2>Create, Read, and Delete the entries of guests riding attractions in in the park.</h2>
    [
    <a href="home">Home Page</a> |
    <a href="guests">Guests</a> |
    <a href="orders">Orders</a> |
    <a href="attractions">Attractions</a> |
    <a href="dates">Dates</a> |
    <a href="guests_has_attractions">Rides Ridden by Guests</a> |
    <a href="master_table">Master Table</a>
    ]

    <div id="browse"
    <p> </p>
    <p><strong> Attractions Ridden by Guests Table</strong></p>

<table border="1" cellpadding="5">
            <!-- Access data tuple passed from app.py --> 
            {% if guests_has_attractions %}
			    <thead>
				    <tr>
					    <!-- Iterate through each key in the first entry to get the column name -->
                        {% for key in guests_has_attractions[0].keys() %}
					    
                        <!-- Create a <th> tag with the key inside of it, this will be our header row -->
					    <th scope="col" data-field="{{ key }}" data-filter-control="input">{{ key }}</th>
					
                        <!-- End of this for loop -->
                        {% endfor %} 
                        <th colspan = "2"> Modify </th>
                    </tr>
				<tbody>
					<!-- Now, iterate through every item in data -->{% for attr in guests_has_attractions %}
					    <tr>
						    <!-- Then iterate through every key in the current item dictionary -->
                            {% for key in attr.keys() %}

						    <!-- Create a guest_has_attraction<td> element with the value of that key in it -->
						    <td> {{attr[key]}} </td> 
                            {% endfor %}

                            <!-- Create our edit/delete buttons -->
						    <td><a href="delete_guests_has_attractions/{{attr.guest_attraction_id}}" class="btn btn-default">Delete</a></td>
					    </tr> 
                        {% endfor %} 
                {% endif %} 
        </table>   
 
    <p></p>
    <p></p>
    <input type="submit" value="Add Guest/Ride Interaction" onClick="newAttrGuest()">
    </div> <!-- end of browse -->
    <div id="insert">
        <form method="POST" id="add_intersection">
            <p></p>
            <legend><strong>Add Guest/Ride Interaction</strong></legend>
              <fieldset class="fields">
                <label> Guest ID </label> 
                <select required name="guest_id" id="guest_id">
                    <option disable selected value=></option> 
                    {% for guest in guest_ids %}
                        <option value="{{ guest['guest_id'] }}">{{ guest['guest_id'] }}</option>
                    {% endfor %}
                </select> 
                <label> Ride ID </label> 
                <select required name="ride_id" id="ride_id">
                    <option disable selected value=></option>
                    {% for ride in ride_ids %}
                        <option value="{{ ride['ride_id'] }}">{{ ride['ride_id'] }}</option>
                    {% endfor %}
                </select> 
                <label> Date </label> 
                <select required name="date" id="date">
                    <option disable selected value=></option>
                    {% for date in dates %}
                        <option value="{{ date['date'] }}">{{ date['date'] }}</option>
                    {% endfor %}
                </select>
                
          </fieldset>
              <input class="btn" type="submit" id="addRide" value="Add Ride">
              <input class="btn" type="button" value="Cancel" onClick="browseAttrGuest()">
        </form> 
    </div><!-- insert -->
</body>
</html>
